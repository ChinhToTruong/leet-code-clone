server:
  port: 8080
  servlet:
    context-path: /api/v1.0
spring:
  application:
    name: application


  datasource:
    url: jdbc:postgresql://localhost:5432/my_database
    username: postgres
    password: root
  jpa:
    hibernate:
      ddl-auto: update

    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC

    open-in-view: false
    show-sql: true
    database-platform: postgres

  jackson:
    property-naming-strategy: SNAKE_CASE
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
      indent-output: true
    time-zone: Asia/Bangkok

  kafka:
    consumer:
      auto-offset-reset: latest  # earliest/latest/none
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      ack-mode: manual
    topic:
      test-topic: TEST_TOPIC
    bootstrap-servers: localhost:29092

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    path: /index.html
    operations-sorter: method

authentication:
  secret-key:
    access-token: 86b3901eea37a04e8547cd912225f548d2e0a92078887682ce831a433072f9d1
    refresh-token: 6c8a7d4aa21708a432174e4cb5c6cfaf0218f5f3e52f9a76a7d95d2aaade2c83
  time-expired:
    access-token: 10
    refresh-token: 360



management:
  metrics:
    tags:
      application: my-app
      env: dev
  health:
    circuitbreakers:
      enable: true
  endpoints:
    web:
      exposure:
        exclude:
          - "*"
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    prometheus:
      access: unrestricted


